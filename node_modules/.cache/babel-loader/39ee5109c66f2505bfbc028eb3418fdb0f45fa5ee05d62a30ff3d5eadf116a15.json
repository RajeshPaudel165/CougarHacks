{"ast":null,"code":"var _jsxFileName = \"/Users/rajesh/my-react-app/src/components/Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Questions from \"./components/Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selected, setSelected] = useState(null);\n  const nextQuestion = option => {\n    if (option === Questions[index].answer) {\n      setScore(score + 1);\n    }\n    setSelected(option);\n    setTimeout(() => {\n      setSelected(null);\n      setIndex(index + 1);\n    }, 1000);\n  };\n  const restartQuiz = () => {\n    setIndex(0);\n    setScore(0);\n    setSelected(null);\n  };\n  if (index >= Questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartQuiz,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: Questions[index].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), Questions[index].options.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: selected ? option === Questions[index].answer ? \"correct\" : \"wrong\" : \"\",\n      onClick: () => nextQuestion(option),\n      disabled: selected,\n      children: option\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"lU9+o4uTdAT2Z42MYBR00CCdJj4=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","Questions","jsxDEV","_jsxDEV","Quiz","_s","index","setIndex","score","setScore","selected","setSelected","nextQuestion","option","answer","setTimeout","restartQuiz","length","className","children","questions","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","map","i","disabled","_c","$RefreshReg$"],"sources":["/Users/rajesh/my-react-app/src/components/Quiz.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Questions from \"./components/Questions\";\n\nconst Quiz = () => {\n  const [index, setIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selected, setSelected] = useState(null);\n\n  const nextQuestion = (option) => {\n    if (option === Questions[index].answer) {\n      setScore(score + 1);\n    }\n    setSelected(option);\n    setTimeout(() => {\n      setSelected(null);\n      setIndex(index + 1);\n    }, 1000);\n  };\n\n  const restartQuiz = () => {\n    setIndex(0);\n    setScore(0);\n    setSelected(null);\n  };\n\n  if (index >= Questions.length) {\n    return (\n      <div className=\"quiz-container\">\n        <h2>\n          Score: {score} / {questions.length}\n        </h2>\n        <button onClick={restartQuiz}>Restart</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"quiz-container\">\n      <h2>{Questions[index].question}</h2>\n      {Questions[index].options.map((option, i) => (\n        <button\n          key={i}\n          className={\n            selected\n              ? option === Questions[index].answer\n                ? \"correct\"\n                : \"wrong\"\n              : \"\"\n          }\n          onClick={() => nextQuestion(option)}\n          disabled={selected}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMY,YAAY,GAAIC,MAAM,IAAK;IAC/B,IAAIA,MAAM,KAAKZ,SAAS,CAACK,KAAK,CAAC,CAACQ,MAAM,EAAE;MACtCL,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IACAG,WAAW,CAACE,MAAM,CAAC;IACnBE,UAAU,CAAC,MAAM;MACfJ,WAAW,CAAC,IAAI,CAAC;MACjBJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBT,QAAQ,CAAC,CAAC,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACXE,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,IAAIL,KAAK,IAAIL,SAAS,CAACgB,MAAM,EAAE;IAC7B,oBACEd,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BhB,OAAA;QAAAgB,QAAA,GAAI,SACK,EAACX,KAAK,EAAC,KAAG,EAACY,SAAS,CAACH,MAAM;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACLrB,OAAA;QAAQsB,OAAO,EAAET,WAAY;QAAAG,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAEV;EAEA,oBACErB,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAKlB,SAAS,CAACK,KAAK,CAAC,CAACoB;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnCvB,SAAS,CAACK,KAAK,CAAC,CAACqB,OAAO,CAACC,GAAG,CAAC,CAACf,MAAM,EAAEgB,CAAC,kBACtC1B,OAAA;MAEEe,SAAS,EACPR,QAAQ,GACJG,MAAM,KAAKZ,SAAS,CAACK,KAAK,CAAC,CAACQ,MAAM,GAChC,SAAS,GACT,OAAO,GACT,EACL;MACDW,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACC,MAAM,CAAE;MACpCiB,QAAQ,EAAEpB,QAAS;MAAAS,QAAA,EAElBN;IAAM,GAXFgB,CAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYA,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtDID,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAwDV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}